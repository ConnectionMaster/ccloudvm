---
inherits: docker-xenial
needs_nested_vm: true
vm:
  mem_mib: 4000
  cpus: 2
{{with .GoPath}}
  mounts:
  - tag: hostgo
    security_model: none
    path: {{.}}
{{end}}
...
---
{{- define "ENV" -}}
{{proxyVars .}}
{{- print " DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true " -}}
{{end}}
{{ define "GOPATH" }}{{with .GoPath}}{{$.MountPath "hostgo"}}{{else}}/home/{{.User}}/go{{end}}{{end}}
#cloud-config
write_files:
 - content: |
     [Service]
     ExecStart=
     ExecStart=/usr/bin/dockerd -D --add-runtime cor=/usr/bin/cc-runtime --default-runtime=cor
   path: /etc/systemd/system/docker.service.d/clr-containers.conf
 - content: |
     #!/bin/sh
     printf "\n"
     printf "\n"
     printf "Your go code is at {{template "GOPATH" .}}\n"
     printf "You can also edit your code on your host system \n"
     printf "To build cc-runtime from sources \n"
     printf "go get -d github.com/clearcontainers/runtime... \n"
     printf "cd {{template "GOPATH" .}}/src/github.com/clearcontainers/runtime \n"
     printf "make build-cc-system\n"
     printf "sudo -E PATH=$PATH make install-cc-system \n"
     printf "\n"
     printf "\n"
   path: /etc/update-motd.d/10-ciao-help-text
   permissions: '0755'
 - content: |
     [Unit]
      Description=OCI-based implementation of Kubernetes Container Runtime Interface
      Documentation=https://github.com/kubernetes-incubator/cri-o

      [Service]
      ExecStart=/usr/bin/crio --debug
      Environment="HTTP_PROXY={{$.HTTPProxy}}"{{if len .HTTPSProxy}} "HTTPS_PROXY={{.HTTPSProxy}}{{end}}"{{if len .NoProxy}} "NO_PROXY={{.NoProxy}},{{.Hostname}}{{end}}"
      Restart=on-failure
      RestartSec=5

      [Install]
      WantedBy=multi-user.target
   path: /etc/systemd/system/crio.service

runcmd:

 - rm /etc/update-motd.d/10-help-text /etc/update-motd.d/51-cloudguest
 - rm /etc/update-motd.d/90-updates-available
 - rm /etc/legal

 - {{beginTask . "Booting VM"}}
 - {{endTaskOk . }}

 - echo "GOPATH=\"{{template "GOPATH" .}}\"" >> /etc/environment
 - echo "PATH=\"$PATH:/usr/local/go/bin:{{template "GOPATH" .}}/bin\""  >> /etc/environment

 - {{beginTask . "Downloading Go" }}
 - {{download . "https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz" "/tmp/go1.8.3.linux-amd64.tar.gz"}}
 - {{endTaskCheck .}}

 - {{beginTask . "Unpacking Go" }}
 - tar -C /usr/local -xzf /tmp/go1.8.3.linux-amd64.tar.gz
 - {{endTaskCheck .}}
 
 - rm /tmp/go1.8.3.linux-amd64.tar.gz

 - {{beginTask . "Add Clear Containers OBS Repository "}}
 - sudo sh -c "echo 'deb http://download.opensuse.org/repositories/home:/clearcontainers:/clear-containers-3/xUbuntu_16.04/ /' >> /etc/apt/sources.list.d/clear-containers.list"
 - {{template "ENV" .}}curl -fsSL http://download.opensuse.org/repositories/home:/clearcontainers:/clear-containers-3/xUbuntu_16.04/Release.key | sudo apt-key add -
 - {{endTaskCheck .}}

 - {{beginTask . "Add CRI-O OS dependency repo"}}
 - {{template "ENV" .}}sudo add-apt-repository "ppa:alexlarsson/flatpak"
 - {{endTaskCheck .}}

 - {{beginTask . "Add CRI-O repo"}}
 - {{template "ENV" .}}sudo add-apt-repository "ppa:projectatomic/ppa"
 - {{endTaskCheck .}}

 - {{beginTask . "Add K8S repo"}}
 - sudo sh -c "echo 'deb http://apt.kubernetes.io/ kubernetes-xenial-unstable main' >> /etc/apt/sources.list.d/kubernetes.list"
 - {{endTaskCheck .}}

 - {{beginTask . "Add Google GPG key"}}
 - {{template "ENV" .}}curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
 - {{endTaskCheck .}}

 - {{beginTask . "Retrieving updated list of packages"}}
 - {{template "ENV" .}}sudo apt-get update
 - {{endTaskCheck .}}

 - {{beginTask . "Installing Clear Containers Runtime"}}
 - {{template "ENV" .}}sudo apt-get install -y cc-runtime cc-proxy cc-shim
 - {{endTaskCheck .}}

 - {{beginTask . "Start Clear Containers Runtime"}}
 - sudo systemctl daemon-reload
 - sudo systemctl restart docker
 - sudo systemctl enable cc-proxy.socket
 - sudo systemctl start cc-proxy.socket
 - {{endTaskCheck .}}

 - {{beginTask . "Installing GCC"}}
 - {{template "ENV" .}}apt-get install gcc -y
 - {{endTaskCheck .}}

 - {{beginTask . "Installing Make"}}
 - {{template "ENV" .}}apt-get install make -y
 - {{endTaskCheck .}}

 - {{beginTask . "Installing QEMU" }}
 - {{template "ENV" .}}apt-get install qemu-system-x86 -y
 - {{endTaskCheck .}}

 - {{beginTask . "Installing Clear Containers development tools"}}
 - {{template "ENV" .}}apt-get install build-essential python zlib1g-dev libcap-ng-dev libglib2.0-dev libpixman-1-dev libattr1-dev libcap-dev autoconf libtool libjson-glib-dev uuid-dev check bats libdevmapper-dev file apt-utils wget valgrind lcov libmnl-dev cppcheck libtap-formatter-html-perl -y
 - {{endTaskCheck .}}

 - {{beginTask . "Installing CRI-O dependencies"}}
 - {{template "ENV" .}}apt-get install -y socat libgpgme11 libostree-1-1
 - {{endTaskCheck .}}

 - {{beginTask . "Installing K8S"}}
 - {{template "ENV" .}}apt-get install -y kubelet=1.7.5-00 kubeadm=1.7.5-00 kubectl=1.7.5-00
 - {{template "ENV" .}}sudo apt-mark hold kubelet kubeadm kubectl
 - {{endTaskCheck .}}

 - {{beginTask . "Installing CRI-O"}}
 - {{template "ENV" .}}apt-get install -y cri-o
 - {{endTaskCheck .}}

 - {{beginTask . "Auto removing unused development components"}}
 - {{template "ENV" .}}apt-get auto-remove -y
 - {{endTaskCheck .}}

 - {{beginTask . "Configuring CRIO for Clear Containers"}}
 - sudo sed -i 's/runtime_untrusted_workload = ""/runtime_untrusted_workload = "\/usr\/bin\/cc-runtime"/' "/etc/crio/crio.conf"
 - {{endTaskCheck .}}

 - {{beginTask . "Configuring K8S for CRIO"}}
 - sudo sed -i '/KUBELET_CADVISOR_ARGS/a Environment="KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint=/var/run/crio.sock --runtime-request-timeout=30m"' "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
 - {{endTaskCheck .}}

 - {{beginTask . "Start CRI-O daemon"}}
 - sudo systemctl enable crio
 - sudo systemctl start crio
 - {{endTaskCheck .}}

 - {{beginTask . "Installing Go development utils"}}
 - sudo -u {{.User}} {{template "ENV" .}} GOPATH={{template "GOPATH" .}} /usr/local/go/bin/go get github.com/mattn/goveralls golang.org/x/tools/cmd/cover github.com/pierrre/gotestcover github.com/fzipp/gocyclo github.com/gordonklaus/ineffassign github.com/golang/lint/golint github.com/client9/misspell/cmd/misspell github.com/ciao-project/ciao/test-cases github.com/opencontainers/runc/libcontainer/configs
 - {{endTaskCheck .}}

 - chown {{.User}}:{{.User}} -R {{template "GOPATH" .}}

{{if len .GitUserName}}
 - {{beginTask . "Setting git user.name"}}
 - sudo -u {{.User}} git config --global user.name "{{.GitUserName}}"
 - {{endTaskCheck .}}
{{end}}

{{if len .GitEmail}}
 - {{beginTask . "Setting git user.email"}}
 - sudo -u {{.User}} git config --global user.email {{.GitEmail}}
 - {{endTaskCheck .}}
{{end}}

...

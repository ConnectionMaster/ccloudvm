---
inherits: xenial
needs_nested_vm: true
vm:
  mem_mib: 8192
  cpus: 4
  ports:
  - host: 55580
    guest: 80
  - host: 6080
    guest: 6080
...
---
package_update: true
runcmd:
# Create stack user with password 'stack' with sudo permissions
  - {{beginTask . "Create stack user" }}
  - useradd stack --password '$6$rounds=4096$MR2zoeakPq$e7pPUB1SeBd3FwcsFCdcQG.ayHF2gAzkCvCQj.ff/wD0MBB.5H4atzRR0DK9il.b3wFt0FjN13CtdVxbtp9x9.' --shell /bin/bash -m
  - {{endTaskCheck . }}
  - {{beginTask . "Add stack user to sudo list" }}
  - printf "stack ALL=(ALL) NOPASSWD:ALL\n" >> /etc/sudoers.d/90-cloud-init-users
  - {{endTaskCheck . }}
{{if .HostIP }}
  - 'printf "%s\n"
   "auto lo:0"
   "iface lo:0 inet static"
   "        address {{.HostIP}}"
   "        netmask 255.0.0.0"
   "        network 127.0.0.0"
    >> /etc/network/interfaces'
  - 'ifup lo:0'
{{end}}
  - {{beginTask . "Create gitconfig file with rules" }}
  - su -c 'printf "%s\n"
    "[url \"http://\"]"
    "  insteadOf=git://"
    > /home/stack/.gitconfig' stack
  - {{endTaskCheck .}}

  - {{beginTask . "Download devstack" }}
  - sudo -u stack {{proxyVars .}} git clone http://git.openstack.org/openstack-dev/devstack /home/stack/devstack
  - {{endTaskCheck .}}

# Once dyamic IP provisioning is available, the HOST_IP can be populated with
# it against the current static one.  If the guest VM is connected to a local
# IP address on the host we use the same local IP address inside the guest.
# This allows URLs that refer to this IP address to work both in the guest
# and the host, providing the relevant ports are mapped.
  - {{beginTask . "Create conf file" }}
  - su -c 'printf "%s\n"
    "[[local|localrc]]"
    {{ if .HostIP -}}
    "HOST_IP={{.HostIP}}"
    {{- else -}}
    "HOST_IP=127.0.0.1"
    {{- end}}
    "ADMIN_PASSWORD=secret"
    "DATABASE_PASSWORD=\$ADMIN_PASSWORD"
    "RABBIT_PASSWORD=\$ADMIN_PASSWORD"
    "SERVICE_PASSWORD=\$ADMIN_PASSWORD"
    > /home/stack/devstack/local.conf' stack
  - {{endTaskCheck .}}

  - {{message . "" }}
  - {{message . "====================================================================" }}
  - {{message . "" }}
  - {{message . "devstack initialised with a default local.conf" }}
  - {{message . "" }}
  - {{message . "    [[local|localrc]]" }}
{{with .HostIP}}
  - {{message $ (printf "    HOST_IP=%s" . ) }}
{{else}}
  - {{message . "    HOST_IP=127.0.0.1" }}
{{end}}
  - {{message . "    ADMIN_PASSWORD=secret" }}
  - {{message . "    DATABASE_PASSWORD=\\$ADMIN_PASSWORD" }}
  - {{message . "    RABBIT_PASSWORD=\\$ADMIN_PASSWORD" }}
  - {{message . "    SERVICE_PASSWORD=\\$ADMIN_PASSWORD" }}
  - {{message . "" }}
  - {{message . "To start devstack with these defaults type" }}
  - {{message . "" }}
  - {{message . (printf "    ccloudvm connect %s" .Hostname) }}
  - {{message . "    sudo su -c 'cd devstack && ./stack.sh' -l stack" }}
  - {{message . "" }}
  - {{message . "To start with a custom local.conf"}}
  - {{message . "" }}
  {{with .HostIP}}
  - {{message $ (printf "    Set the HOST_IP field of your local.conf to %s" .) }}
  {{else}}
  - {{message $ (printf "    Set the HOST_IP field of your local.conf to the HostIP value reported by ccloudvm status %s" $.Hostname) }}
  {{end}}
  - {{message . "" }}
  - {{message . (printf "    ccloudvm copy %s local.conf /home/stack/devstack/local.conf" .Hostname) }}
  - {{message . (printf "    ccloudvm connect %s" .Hostname) }}
  - {{message . "    sudo su -c 'cd devstack && ./stack.sh' -l stack" }}
  - {{message . "" }}
{{with .HostIP}}
  - {{message $ (printf "To access horizon point your host's browser at http://%s:55580/dashboard" . ) }}
  - {{message $ (printf "If you're using proxies ensure that %s is in your no_proxy settings." . ) }}
  - {{message $ "" }}
{{end}}
  - {{message . "====================================================================" }}
  - {{message . "" }}
...
